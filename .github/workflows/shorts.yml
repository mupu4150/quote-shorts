name: build-shorts-url

on:
  workflow_dispatch:
    inputs:
      segments_url:
        description: "raw URL to segments.json (public)"
        type: string
        required: true
      narration_url:
        description: "raw URL to narration.txt or audio (public)"
        type: string
        required: true

# Dify側で判別しやすいよう実行名にURL末尾を入れておく（任意）
run-name: "shorts: ${{ inputs.segments_url }}"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (optional)
        uses: actions/checkout@v4

      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg jq curl

      - name: Prepare dirs
        run: |
          mkdir -p inputs out work

      - name: Download inputs
        run: |
          set -euo pipefail
          echo "Downloading segments.json..."
          curl -fsSL --retry 3 "${{ inputs.segments_url }}" -o inputs/segments.json

          echo "Downloading narration..."
          curl -fsSL --retry 3 "${{ inputs.narration_url }}" -o inputs/narration.bin

          echo "Head of segments.json:"
          head -c 300 inputs/segments.json || true
          echo
          echo "File type of narration.bin:"
          file inputs/narration.bin || true

      - name: Normalize narration (make sure we have audio)
        run: |
          set -euo pipefail
          if file inputs/narration.bin | grep -qi "text"; then
            mv inputs/narration.bin inputs/narration.txt
            # create 1s silent audio for wiring test
            ffmpeg -f lavfi -i anullsrc=r=44100:cl=mono -t 1 -q:a 9 -acodec libmp3lame inputs/narration.mp3 -y
          else
            # try simple extension mapping
            mv inputs/narration.bin inputs/narration.wav || true
          fi

      - name: Build placeholder vertical video
        run: |
          set -euo pipefail
          # try to detect duration from provided audio; fallback to 5s
          DUR=$(ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 inputs/narration.wav 2>/dev/null || \
                ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 inputs/narration.mp3 2>/dev/null || echo 5)

          # make 1080x1920 black background
          ffmpeg -f lavfi -i color=c=black:s=1080x1920:d=${DUR} -r 30 -pix_fmt yuv420p work/blank.mp4 -y

          if [ -f inputs/narration.wav ]; then
            ffmpeg -i work/blank.mp4 -i inputs/narration.wav -c:v libx264 -c:a aac -shortest out/short.mp4 -y
          elif [ -f inputs/narration.mp3 ]; then
            ffmpeg -i work/blank.mp4 -i inputs/narration.mp3 -c:v libx264 -c:a aac -shortest out/short.mp4 -y
          else
            echo "No audio found; output video will be silent."
            cp work/blank.mp4 out/short.mp4
          fi

      - name: Upload artifact (video + segments)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: short
          path: |
            out/short.mp4
            inputs/segments.json
          if-no-files-found: error
          retention-days: 7
